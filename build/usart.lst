ARM GAS  /tmp/ccWaikVG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_USART1_UART_Init:
  26              	.LFB126:
  27              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccWaikVG.s 			page 2


  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** /* USER CODE BEGIN 0 */
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE END 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** UART_HandleTypeDef huart1;
  48:Src/usart.c   **** DMA_HandleTypeDef hdma_usart1_rx;
  49:Src/usart.c   **** DMA_HandleTypeDef hdma_usart1_tx;
  50:Src/usart.c   **** 
  51:Src/usart.c   **** /* USART1 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART1_UART_Init(void)
  54:Src/usart.c   **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart1.Instance = USART1;
  37              		.loc 1 56 0
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  57:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 57 0
  42 0008 4FF4E133 		mov	r3, #115200
  43 000c 4360     		str	r3, [r0, #4]
  58:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  44              		.loc 1 58 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  59:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  47              		.loc 1 59 0
  48 0012 C360     		str	r3, [r0, #12]
  60:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  49              		.loc 1 60 0
  50 0014 0361     		str	r3, [r0, #16]
  61:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  51              		.loc 1 61 0
  52 0016 0C22     		movs	r2, #12
  53 0018 4261     		str	r2, [r0, #20]
  62:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccWaikVG.s 			page 3


  54              		.loc 1 62 0
  55 001a 8361     		str	r3, [r0, #24]
  63:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  56              		.loc 1 63 0
  57 001c C361     		str	r3, [r0, #28]
  64:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  58              		.loc 1 64 0
  59 001e FFF7FEFF 		bl	HAL_UART_Init
  60              	.LVL0:
  61 0022 00B9     		cbnz	r0, .L4
  62              	.L1:
  65:Src/usart.c   ****   {
  66:Src/usart.c   ****     Error_Handler();
  67:Src/usart.c   ****   }
  68:Src/usart.c   **** 
  69:Src/usart.c   **** }
  63              		.loc 1 69 0
  64 0024 08BD     		pop	{r3, pc}
  65              	.L4:
  66:Src/usart.c   ****   }
  66              		.loc 1 66 0
  67 0026 FFF7FEFF 		bl	Error_Handler
  68              	.LVL1:
  69              		.loc 1 69 0
  70 002a FBE7     		b	.L1
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 002c 00000000 		.word	huart1
  75 0030 00100140 		.word	1073811456
  76              		.cfi_endproc
  77              	.LFE126:
  79              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_UART_MspInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	HAL_UART_MspInit:
  88              	.LFB127:
  70:Src/usart.c   **** 
  71:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  72:Src/usart.c   **** {
  89              		.loc 1 72 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 32
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL2:
  94 0000 30B5     		push	{r4, r5, lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 12
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 5, -8
  99              		.cfi_offset 14, -4
 100 0002 89B0     		sub	sp, sp, #36
 101              	.LCFI2:
ARM GAS  /tmp/ccWaikVG.s 			page 4


 102              		.cfi_def_cfa_offset 48
  73:Src/usart.c   **** 
  74:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 103              		.loc 1 74 0
 104 0004 0023     		movs	r3, #0
 105 0006 0393     		str	r3, [sp, #12]
 106 0008 0493     		str	r3, [sp, #16]
 107 000a 0593     		str	r3, [sp, #20]
 108 000c 0693     		str	r3, [sp, #24]
 109 000e 0793     		str	r3, [sp, #28]
  75:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 110              		.loc 1 75 0
 111 0010 0268     		ldr	r2, [r0]
 112 0012 03F18043 		add	r3, r3, #1073741824
 113 0016 03F58833 		add	r3, r3, #69632
 114 001a 9A42     		cmp	r2, r3
 115 001c 01D0     		beq	.L12
 116              	.LVL3:
 117              	.L7:
  76:Src/usart.c   ****   {
  77:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  78:Src/usart.c   **** 
  79:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  80:Src/usart.c   ****     /* USART1 clock enable */
  81:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
  82:Src/usart.c   ****   
  83:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  84:Src/usart.c   ****     /**USART1 GPIO Configuration    
  85:Src/usart.c   ****     PA9     ------> USART1_TX
  86:Src/usart.c   ****     PA10     ------> USART1_RX 
  87:Src/usart.c   ****     */
  88:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
  89:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  90:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  91:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  92:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  93:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  94:Src/usart.c   **** 
  95:Src/usart.c   ****     /* USART1 DMA Init */
  96:Src/usart.c   ****     /* USART1_RX Init */
  97:Src/usart.c   ****     hdma_usart1_rx.Instance = DMA2_Stream2;
  98:Src/usart.c   ****     hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
  99:Src/usart.c   ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 100:Src/usart.c   ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 101:Src/usart.c   ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 102:Src/usart.c   ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 103:Src/usart.c   ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 104:Src/usart.c   ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 105:Src/usart.c   ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 106:Src/usart.c   ****     hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 107:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 108:Src/usart.c   ****     {
 109:Src/usart.c   ****       Error_Handler();
 110:Src/usart.c   ****     }
 111:Src/usart.c   **** 
 112:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 113:Src/usart.c   **** 
ARM GAS  /tmp/ccWaikVG.s 			page 5


 114:Src/usart.c   ****     /* USART1_TX Init */
 115:Src/usart.c   ****     hdma_usart1_tx.Instance = DMA2_Stream7;
 116:Src/usart.c   ****     hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 117:Src/usart.c   ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 118:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 119:Src/usart.c   ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 120:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 121:Src/usart.c   ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 122:Src/usart.c   ****     hdma_usart1_tx.Init.Mode = DMA_CIRCULAR;
 123:Src/usart.c   ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 124:Src/usart.c   ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 125:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 126:Src/usart.c   ****     {
 127:Src/usart.c   ****       Error_Handler();
 128:Src/usart.c   ****     }
 129:Src/usart.c   **** 
 130:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 131:Src/usart.c   **** 
 132:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 133:Src/usart.c   **** 
 134:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 135:Src/usart.c   ****   }
 136:Src/usart.c   **** }
 118              		.loc 1 136 0
 119 001e 09B0     		add	sp, sp, #36
 120              	.LCFI3:
 121              		.cfi_remember_state
 122              		.cfi_def_cfa_offset 12
 123              		@ sp needed
 124 0020 30BD     		pop	{r4, r5, pc}
 125              	.LVL4:
 126              	.L12:
 127              	.LCFI4:
 128              		.cfi_restore_state
 129 0022 0446     		mov	r4, r0
 130              	.LBB2:
  81:Src/usart.c   ****   
 131              		.loc 1 81 0
 132 0024 0025     		movs	r5, #0
 133 0026 0195     		str	r5, [sp, #4]
 134 0028 03F59433 		add	r3, r3, #75776
 135 002c 5A6C     		ldr	r2, [r3, #68]
 136 002e 42F01002 		orr	r2, r2, #16
 137 0032 5A64     		str	r2, [r3, #68]
 138 0034 5A6C     		ldr	r2, [r3, #68]
 139 0036 02F01002 		and	r2, r2, #16
 140 003a 0192     		str	r2, [sp, #4]
 141 003c 019A     		ldr	r2, [sp, #4]
 142              	.LBE2:
 143              	.LBB3:
  83:Src/usart.c   ****     /**USART1 GPIO Configuration    
 144              		.loc 1 83 0
 145 003e 0295     		str	r5, [sp, #8]
 146 0040 1A6B     		ldr	r2, [r3, #48]
 147 0042 42F00102 		orr	r2, r2, #1
 148 0046 1A63     		str	r2, [r3, #48]
 149 0048 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccWaikVG.s 			page 6


 150 004a 03F00103 		and	r3, r3, #1
 151 004e 0293     		str	r3, [sp, #8]
 152 0050 029B     		ldr	r3, [sp, #8]
 153              	.LBE3:
  88:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 154              		.loc 1 88 0
 155 0052 4FF4C063 		mov	r3, #1536
 156 0056 0393     		str	r3, [sp, #12]
  89:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 157              		.loc 1 89 0
 158 0058 0223     		movs	r3, #2
 159 005a 0493     		str	r3, [sp, #16]
  90:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 160              		.loc 1 90 0
 161 005c 0123     		movs	r3, #1
 162 005e 0593     		str	r3, [sp, #20]
  91:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 163              		.loc 1 91 0
 164 0060 0323     		movs	r3, #3
 165 0062 0693     		str	r3, [sp, #24]
  92:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 92 0
 167 0064 0723     		movs	r3, #7
 168 0066 0793     		str	r3, [sp, #28]
  93:Src/usart.c   **** 
 169              		.loc 1 93 0
 170 0068 03A9     		add	r1, sp, #12
 171 006a 1D48     		ldr	r0, .L15
 172              	.LVL5:
 173 006c FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL6:
  97:Src/usart.c   ****     hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 175              		.loc 1 97 0
 176 0070 1C48     		ldr	r0, .L15+4
 177 0072 1D4B     		ldr	r3, .L15+8
 178 0074 0360     		str	r3, [r0]
  98:Src/usart.c   ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 179              		.loc 1 98 0
 180 0076 4FF00063 		mov	r3, #134217728
 181 007a 4360     		str	r3, [r0, #4]
  99:Src/usart.c   ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 182              		.loc 1 99 0
 183 007c 8560     		str	r5, [r0, #8]
 100:Src/usart.c   ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 184              		.loc 1 100 0
 185 007e C560     		str	r5, [r0, #12]
 101:Src/usart.c   ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 186              		.loc 1 101 0
 187 0080 4FF48063 		mov	r3, #1024
 188 0084 0361     		str	r3, [r0, #16]
 102:Src/usart.c   ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 189              		.loc 1 102 0
 190 0086 4561     		str	r5, [r0, #20]
 103:Src/usart.c   ****     hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 191              		.loc 1 103 0
 192 0088 8561     		str	r5, [r0, #24]
 104:Src/usart.c   ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
ARM GAS  /tmp/ccWaikVG.s 			page 7


 193              		.loc 1 104 0
 194 008a C561     		str	r5, [r0, #28]
 105:Src/usart.c   ****     hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 195              		.loc 1 105 0
 196 008c 0562     		str	r5, [r0, #32]
 106:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 197              		.loc 1 106 0
 198 008e 4562     		str	r5, [r0, #36]
 107:Src/usart.c   ****     {
 199              		.loc 1 107 0
 200 0090 FFF7FEFF 		bl	HAL_DMA_Init
 201              	.LVL7:
 202 0094 E8B9     		cbnz	r0, .L13
 203              	.L9:
 112:Src/usart.c   **** 
 204              		.loc 1 112 0
 205 0096 134B     		ldr	r3, .L15+4
 206 0098 6363     		str	r3, [r4, #52]
 207 009a 9C63     		str	r4, [r3, #56]
 115:Src/usart.c   ****     hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 208              		.loc 1 115 0
 209 009c 1348     		ldr	r0, .L15+12
 210 009e 144B     		ldr	r3, .L15+16
 211 00a0 0360     		str	r3, [r0]
 116:Src/usart.c   ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 212              		.loc 1 116 0
 213 00a2 4FF00063 		mov	r3, #134217728
 214 00a6 4360     		str	r3, [r0, #4]
 117:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 215              		.loc 1 117 0
 216 00a8 4023     		movs	r3, #64
 217 00aa 8360     		str	r3, [r0, #8]
 118:Src/usart.c   ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 218              		.loc 1 118 0
 219 00ac 0023     		movs	r3, #0
 220 00ae C360     		str	r3, [r0, #12]
 119:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 221              		.loc 1 119 0
 222 00b0 4FF48062 		mov	r2, #1024
 223 00b4 0261     		str	r2, [r0, #16]
 120:Src/usart.c   ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 224              		.loc 1 120 0
 225 00b6 4361     		str	r3, [r0, #20]
 121:Src/usart.c   ****     hdma_usart1_tx.Init.Mode = DMA_CIRCULAR;
 226              		.loc 1 121 0
 227 00b8 8361     		str	r3, [r0, #24]
 122:Src/usart.c   ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 228              		.loc 1 122 0
 229 00ba 4FF48072 		mov	r2, #256
 230 00be C261     		str	r2, [r0, #28]
 123:Src/usart.c   ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 231              		.loc 1 123 0
 232 00c0 0362     		str	r3, [r0, #32]
 124:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 233              		.loc 1 124 0
 234 00c2 4362     		str	r3, [r0, #36]
 125:Src/usart.c   ****     {
ARM GAS  /tmp/ccWaikVG.s 			page 8


 235              		.loc 1 125 0
 236 00c4 FFF7FEFF 		bl	HAL_DMA_Init
 237              	.LVL8:
 238 00c8 30B9     		cbnz	r0, .L14
 239              	.L10:
 130:Src/usart.c   **** 
 240              		.loc 1 130 0
 241 00ca 084B     		ldr	r3, .L15+12
 242 00cc 2363     		str	r3, [r4, #48]
 243 00ce 9C63     		str	r4, [r3, #56]
 244              		.loc 1 136 0
 245 00d0 A5E7     		b	.L7
 246              	.L13:
 109:Src/usart.c   ****     }
 247              		.loc 1 109 0
 248 00d2 FFF7FEFF 		bl	Error_Handler
 249              	.LVL9:
 250 00d6 DEE7     		b	.L9
 251              	.L14:
 127:Src/usart.c   ****     }
 252              		.loc 1 127 0
 253 00d8 FFF7FEFF 		bl	Error_Handler
 254              	.LVL10:
 255 00dc F5E7     		b	.L10
 256              	.L16:
 257 00de 00BF     		.align	2
 258              	.L15:
 259 00e0 00000240 		.word	1073872896
 260 00e4 00000000 		.word	hdma_usart1_rx
 261 00e8 40640240 		.word	1073898560
 262 00ec 00000000 		.word	hdma_usart1_tx
 263 00f0 B8640240 		.word	1073898680
 264              		.cfi_endproc
 265              	.LFE127:
 267              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 268              		.align	1
 269              		.global	HAL_UART_MspDeInit
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	HAL_UART_MspDeInit:
 276              	.LFB128:
 137:Src/usart.c   **** 
 138:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 139:Src/usart.c   **** {
 277              		.loc 1 139 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              	.LVL11:
 140:Src/usart.c   **** 
 141:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 282              		.loc 1 141 0
 283 0000 0268     		ldr	r2, [r0]
 284 0002 0B4B     		ldr	r3, .L24
 285 0004 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccWaikVG.s 			page 9


 286 0006 00D0     		beq	.L23
 287 0008 7047     		bx	lr
 288              	.L23:
 139:Src/usart.c   **** 
 289              		.loc 1 139 0
 290 000a 10B5     		push	{r4, lr}
 291              	.LCFI5:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 295 000c 0446     		mov	r4, r0
 142:Src/usart.c   ****   {
 143:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 144:Src/usart.c   **** 
 145:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 146:Src/usart.c   ****     /* Peripheral clock disable */
 147:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 296              		.loc 1 147 0
 297 000e 094A     		ldr	r2, .L24+4
 298 0010 536C     		ldr	r3, [r2, #68]
 299 0012 23F01003 		bic	r3, r3, #16
 300 0016 5364     		str	r3, [r2, #68]
 148:Src/usart.c   ****   
 149:Src/usart.c   ****     /**USART1 GPIO Configuration    
 150:Src/usart.c   ****     PA9     ------> USART1_TX
 151:Src/usart.c   ****     PA10     ------> USART1_RX 
 152:Src/usart.c   ****     */
 153:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 301              		.loc 1 153 0
 302 0018 4FF4C061 		mov	r1, #1536
 303 001c 0648     		ldr	r0, .L24+8
 304              	.LVL12:
 305 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 306              	.LVL13:
 154:Src/usart.c   **** 
 155:Src/usart.c   ****     /* USART1 DMA DeInit */
 156:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 307              		.loc 1 156 0
 308 0022 606B     		ldr	r0, [r4, #52]
 309 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 310              	.LVL14:
 157:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 311              		.loc 1 157 0
 312 0028 206B     		ldr	r0, [r4, #48]
 313 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 314              	.LVL15:
 158:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 159:Src/usart.c   **** 
 160:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 161:Src/usart.c   ****   }
 162:Src/usart.c   **** } 
 315              		.loc 1 162 0
 316 002e 10BD     		pop	{r4, pc}
 317              	.LVL16:
 318              	.L25:
 319              		.align	2
 320              	.L24:
ARM GAS  /tmp/ccWaikVG.s 			page 10


 321 0030 00100140 		.word	1073811456
 322 0034 00380240 		.word	1073887232
 323 0038 00000240 		.word	1073872896
 324              		.cfi_endproc
 325              	.LFE128:
 327              		.comm	hdma_usart1_tx,96,4
 328              		.comm	hdma_usart1_rx,96,4
 329              		.comm	huart1,64,4
 330              		.text
 331              	.Letext0:
 332              		.file 2 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.
 333              		.file 3 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 334              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 335              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 336              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 337              		.file 7 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 338              		.file 8 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 339              		.file 9 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 340              		.file 10 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 341              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 342              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 343              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 344              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 345              		.file 15 "Inc/usart.h"
 346              		.file 16 "Inc/main.h"
ARM GAS  /tmp/ccWaikVG.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccWaikVG.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccWaikVG.s:25     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccWaikVG.s:74     .text.MX_USART1_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart1
     /tmp/ccWaikVG.s:80     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccWaikVG.s:87     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccWaikVG.s:259    .text.HAL_UART_MspInit:00000000000000e0 $d
                            *COM*:0000000000000060 hdma_usart1_rx
                            *COM*:0000000000000060 hdma_usart1_tx
     /tmp/ccWaikVG.s:268    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccWaikVG.s:275    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccWaikVG.s:321    .text.HAL_UART_MspDeInit:0000000000000030 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
