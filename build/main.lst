ARM GAS  /tmp/ccwjnQIu.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB127:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccwjnQIu.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "can.h"
  44:Src/main.c    **** #include "dma.h"
  45:Src/main.c    **** #include "tim.h"
  46:Src/main.c    **** #include "usart.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PTD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PTD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PM */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PM */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PV */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** void SystemClock_Config(void);
  77:Src/main.c    **** /* USER CODE BEGIN PFP */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END PFP */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  82:Src/main.c    **** /* USER CODE BEGIN 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
  88:Src/main.c    ****   * @retval int
ARM GAS  /tmp/ccwjnQIu.s 			page 3


  89:Src/main.c    ****   */
  90:Src/main.c    **** int main(void)
  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 1 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Src/main.c    ****   HAL_Init();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN Init */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END Init */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Configure the system clock */
 106:Src/main.c    ****   SystemClock_Config();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END SysInit */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Initialize all configured peripherals */
 113:Src/main.c    ****   MX_GPIO_Init();
 114:Src/main.c    ****   MX_DMA_Init();
 115:Src/main.c    ****   MX_CAN1_Init();
 116:Src/main.c    ****   MX_USART1_UART_Init();
 117:Src/main.c    ****   MX_TIM3_Init();
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Infinite loop */
 123:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 124:Src/main.c    ****   while (1)
 125:Src/main.c    ****   {
 126:Src/main.c    ****     /* USER CODE END WHILE */
 127:Src/main.c    ****     HAL_Delay(1000);
 128:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, LED_PB0_Pin, GPIO_PIN_RESET);
 129:Src/main.c    ****     HAL_Delay(1000);
 130:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, LED_PB0_Pin, GPIO_PIN_SET);
 131:Src/main.c    ****     /* USER CODE BEGIN 3 */
 132:Src/main.c    ****   }
 133:Src/main.c    ****   /* USER CODE END 3 */
 134:Src/main.c    **** }
 135:Src/main.c    **** 
 136:Src/main.c    **** /**
 137:Src/main.c    ****   * @brief System Clock Configuration
 138:Src/main.c    ****   * @retval None
 139:Src/main.c    ****   */
 140:Src/main.c    **** void SystemClock_Config(void)
 141:Src/main.c    **** {
  28              		.loc 1 141 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwjnQIu.s 			page 4


  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 95B0     		sub	sp, sp, #84
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 96
 142:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 142 0
  42 0004 3022     		movs	r2, #48
  43 0006 0021     		movs	r1, #0
  44 0008 08A8     		add	r0, sp, #32
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 143:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 143 0
  48 000e 0024     		movs	r4, #0
  49 0010 0394     		str	r4, [sp, #12]
  50 0012 0494     		str	r4, [sp, #16]
  51 0014 0594     		str	r4, [sp, #20]
  52 0016 0694     		str	r4, [sp, #24]
  53 0018 0794     		str	r4, [sp, #28]
  54              	.LBB2:
 144:Src/main.c    **** 
 145:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 146:Src/main.c    ****   */
 147:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 147 0
  56 001a 0194     		str	r4, [sp, #4]
  57 001c 1C4B     		ldr	r3, .L3
  58 001e 1A6C     		ldr	r2, [r3, #64]
  59 0020 42F08052 		orr	r2, r2, #268435456
  60 0024 1A64     		str	r2, [r3, #64]
  61 0026 1B6C     		ldr	r3, [r3, #64]
  62 0028 03F08053 		and	r3, r3, #268435456
  63 002c 0193     		str	r3, [sp, #4]
  64 002e 019B     		ldr	r3, [sp, #4]
  65              	.LBE2:
  66              	.LBB3:
 148:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  67              		.loc 1 148 0
  68 0030 0294     		str	r4, [sp, #8]
  69 0032 184B     		ldr	r3, .L3+4
  70 0034 1A68     		ldr	r2, [r3]
  71 0036 42F48042 		orr	r2, r2, #16384
  72 003a 1A60     		str	r2, [r3]
  73 003c 1B68     		ldr	r3, [r3]
  74 003e 03F48043 		and	r3, r3, #16384
  75 0042 0293     		str	r3, [sp, #8]
  76 0044 029B     		ldr	r3, [sp, #8]
  77              	.LBE3:
 149:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 150:Src/main.c    ****   */
 151:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  78              		.loc 1 151 0
ARM GAS  /tmp/ccwjnQIu.s 			page 5


  79 0046 0123     		movs	r3, #1
  80 0048 0893     		str	r3, [sp, #32]
 152:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  81              		.loc 1 152 0
  82 004a 4FF48033 		mov	r3, #65536
  83 004e 0993     		str	r3, [sp, #36]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  84              		.loc 1 153 0
  85 0050 0225     		movs	r5, #2
  86 0052 0E95     		str	r5, [sp, #56]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  87              		.loc 1 154 0
  88 0054 4FF48003 		mov	r3, #4194304
  89 0058 0F93     		str	r3, [sp, #60]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
  90              		.loc 1 155 0
  91 005a 0823     		movs	r3, #8
  92 005c 1093     		str	r3, [sp, #64]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
  93              		.loc 1 156 0
  94 005e 4FF4A873 		mov	r3, #336
  95 0062 1193     		str	r3, [sp, #68]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  96              		.loc 1 157 0
  97 0064 1295     		str	r5, [sp, #72]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
  98              		.loc 1 158 0
  99 0066 0423     		movs	r3, #4
 100 0068 1393     		str	r3, [sp, #76]
 159:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 101              		.loc 1 159 0
 102 006a 08A8     		add	r0, sp, #32
 103 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 104              	.LVL1:
 160:Src/main.c    ****   {
 161:Src/main.c    ****     Error_Handler();
 162:Src/main.c    ****   }
 163:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 164:Src/main.c    ****   */
 165:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 105              		.loc 1 165 0
 106 0070 0F23     		movs	r3, #15
 107 0072 0393     		str	r3, [sp, #12]
 166:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 108              		.loc 1 167 0
 109 0074 0495     		str	r5, [sp, #16]
 168:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 110              		.loc 1 168 0
 111 0076 0594     		str	r4, [sp, #20]
 169:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 112              		.loc 1 169 0
 113 0078 4FF4A053 		mov	r3, #5120
 114 007c 0693     		str	r3, [sp, #24]
 170:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 115              		.loc 1 170 0
 116 007e 4FF48053 		mov	r3, #4096
ARM GAS  /tmp/ccwjnQIu.s 			page 6


 117 0082 0793     		str	r3, [sp, #28]
 171:Src/main.c    **** 
 172:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 118              		.loc 1 172 0
 119 0084 0521     		movs	r1, #5
 120 0086 03A8     		add	r0, sp, #12
 121 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 122              	.LVL2:
 173:Src/main.c    ****   {
 174:Src/main.c    ****     Error_Handler();
 175:Src/main.c    ****   }
 176:Src/main.c    **** }
 123              		.loc 1 176 0
 124 008c 15B0     		add	sp, sp, #84
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 12
 127              		@ sp needed
 128 008e 30BD     		pop	{r4, r5, pc}
 129              	.L4:
 130              		.align	2
 131              	.L3:
 132 0090 00380240 		.word	1073887232
 133 0094 00700040 		.word	1073770496
 134              		.cfi_endproc
 135              	.LFE127:
 137              		.section	.text.main,"ax",%progbits
 138              		.align	1
 139              		.global	main
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	main:
 146              	.LFB126:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 147              		.loc 1 91 0
 148              		.cfi_startproc
 149              		@ Volatile: function does not return.
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 08B5     		push	{r3, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 3, -8
 156              		.cfi_offset 14, -4
  99:Src/main.c    **** 
 157              		.loc 1 99 0
 158 0002 FFF7FEFF 		bl	HAL_Init
 159              	.LVL3:
 106:Src/main.c    **** 
 160              		.loc 1 106 0
 161 0006 FFF7FEFF 		bl	SystemClock_Config
 162              	.LVL4:
 113:Src/main.c    ****   MX_DMA_Init();
 163              		.loc 1 113 0
 164 000a FFF7FEFF 		bl	MX_GPIO_Init
 165              	.LVL5:
ARM GAS  /tmp/ccwjnQIu.s 			page 7


 114:Src/main.c    ****   MX_CAN1_Init();
 166              		.loc 1 114 0
 167 000e FFF7FEFF 		bl	MX_DMA_Init
 168              	.LVL6:
 115:Src/main.c    ****   MX_USART1_UART_Init();
 169              		.loc 1 115 0
 170 0012 FFF7FEFF 		bl	MX_CAN1_Init
 171              	.LVL7:
 116:Src/main.c    ****   MX_TIM3_Init();
 172              		.loc 1 116 0
 173 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 174              	.LVL8:
 117:Src/main.c    ****   /* USER CODE BEGIN 2 */
 175              		.loc 1 117 0
 176 001a FFF7FEFF 		bl	MX_TIM3_Init
 177              	.LVL9:
 178              	.L6:
 127:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, LED_PB0_Pin, GPIO_PIN_RESET);
 179              		.loc 1 127 0 discriminator 1
 180 001e 4FF47A70 		mov	r0, #1000
 181 0022 FFF7FEFF 		bl	HAL_Delay
 182              	.LVL10:
 128:Src/main.c    ****     HAL_Delay(1000);
 183              		.loc 1 128 0 discriminator 1
 184 0026 084C     		ldr	r4, .L8
 185 0028 0022     		movs	r2, #0
 186 002a 0121     		movs	r1, #1
 187 002c 2046     		mov	r0, r4
 188 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL11:
 129:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, LED_PB0_Pin, GPIO_PIN_SET);
 190              		.loc 1 129 0 discriminator 1
 191 0032 4FF47A70 		mov	r0, #1000
 192 0036 FFF7FEFF 		bl	HAL_Delay
 193              	.LVL12:
 130:Src/main.c    ****     /* USER CODE BEGIN 3 */
 194              		.loc 1 130 0 discriminator 1
 195 003a 0122     		movs	r2, #1
 196 003c 1146     		mov	r1, r2
 197 003e 2046     		mov	r0, r4
 198 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 199              	.LVL13:
 200 0044 EBE7     		b	.L6
 201              	.L9:
 202 0046 00BF     		.align	2
 203              	.L8:
 204 0048 00040240 		.word	1073873920
 205              		.cfi_endproc
 206              	.LFE126:
 208              		.section	.text.Error_Handler,"ax",%progbits
 209              		.align	1
 210              		.global	Error_Handler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	Error_Handler:
ARM GAS  /tmp/ccwjnQIu.s 			page 8


 217              	.LFB128:
 177:Src/main.c    **** 
 178:Src/main.c    **** /* USER CODE BEGIN 4 */
 179:Src/main.c    **** 
 180:Src/main.c    **** /* USER CODE END 4 */
 181:Src/main.c    **** 
 182:Src/main.c    **** /**
 183:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 184:Src/main.c    ****   * @retval None
 185:Src/main.c    ****   */
 186:Src/main.c    **** void Error_Handler(void)
 187:Src/main.c    **** {
 218              		.loc 1 187 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 188:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 189:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 192:Src/main.c    **** }
 223              		.loc 1 192 0
 224 0000 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE128:
 228              		.text
 229              	.Letext0:
 230              		.file 2 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.
 231              		.file 3 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 232              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 233              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 234              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 235              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 236              		.file 8 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 237              		.file 9 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 238              		.file 10 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 239              		.file 11 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 240              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 241              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 242              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 243              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 244              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 245              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 246              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 247              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 248              		.file 20 "Inc/can.h"
 249              		.file 21 "Inc/tim.h"
 250              		.file 22 "Inc/usart.h"
 251              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 252              		.file 24 "Inc/gpio.h"
 253              		.file 25 "Inc/dma.h"
 254              		.file 26 "<built-in>"
ARM GAS  /tmp/ccwjnQIu.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwjnQIu.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwjnQIu.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwjnQIu.s:132    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccwjnQIu.s:138    .text.main:0000000000000000 $t
     /tmp/ccwjnQIu.s:145    .text.main:0000000000000000 main
     /tmp/ccwjnQIu.s:204    .text.main:0000000000000048 $d
     /tmp/ccwjnQIu.s:209    .text.Error_Handler:0000000000000000 $t
     /tmp/ccwjnQIu.s:216    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_CAN1_Init
MX_USART1_UART_Init
MX_TIM3_Init
HAL_Delay
HAL_GPIO_WritePin
