ARM GAS  /tmp/ccLQWHGu.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_CAN1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_CAN1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_CAN1_Init:
  26              	.LFB126:
  27              		.file 1 "Src/can.c"
   1:Src/can.c     **** /**
   2:Src/can.c     ****   ******************************************************************************
   3:Src/can.c     ****   * File Name          : CAN.c
   4:Src/can.c     ****   * Description        : This file provides code for the configuration
   5:Src/can.c     ****   *                      of the CAN instances.
   6:Src/can.c     ****   ******************************************************************************
   7:Src/can.c     ****   ** This notice applies to any and all portions of this file
   8:Src/can.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/can.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/can.c     ****   * inserted by the user or by software development tools
  11:Src/can.c     ****   * are owned by their respective copyright owners.
  12:Src/can.c     ****   *
  13:Src/can.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/can.c     ****   *
  15:Src/can.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/can.c     ****   * are permitted provided that the following conditions are met:
  17:Src/can.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/can.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/can.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/can.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/can.c     ****   *      and/or other materials provided with the distribution.
  22:Src/can.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/can.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/can.c     ****   *      without specific prior written permission.
  25:Src/can.c     ****   *
  26:Src/can.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/can.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/can.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/can.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/can.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/can.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccLQWHGu.s 			page 2


  32:Src/can.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/can.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/can.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/can.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/can.c     ****   *
  37:Src/can.c     ****   ******************************************************************************
  38:Src/can.c     ****   */
  39:Src/can.c     **** 
  40:Src/can.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/can.c     **** #include "can.h"
  42:Src/can.c     **** 
  43:Src/can.c     **** /* USER CODE BEGIN 0 */
  44:Src/can.c     **** 
  45:Src/can.c     **** /* USER CODE END 0 */
  46:Src/can.c     **** 
  47:Src/can.c     **** CAN_HandleTypeDef hcan1;
  48:Src/can.c     **** 
  49:Src/can.c     **** /* CAN1 init function */
  50:Src/can.c     **** void MX_CAN1_Init(void)
  51:Src/can.c     **** {
  28              		.loc 1 51 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  52:Src/can.c     **** 
  53:Src/can.c     ****   hcan1.Instance = CAN1;
  37              		.loc 1 53 0
  38 0002 0B48     		ldr	r0, .L5
  39 0004 0B4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  54:Src/can.c     ****   hcan1.Init.Prescaler = 16;
  41              		.loc 1 54 0
  42 0008 1023     		movs	r3, #16
  43 000a 4360     		str	r3, [r0, #4]
  55:Src/can.c     ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
  44              		.loc 1 55 0
  45 000c 0023     		movs	r3, #0
  46 000e 8360     		str	r3, [r0, #8]
  56:Src/can.c     ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
  47              		.loc 1 56 0
  48 0010 C360     		str	r3, [r0, #12]
  57:Src/can.c     ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
  49              		.loc 1 57 0
  50 0012 0361     		str	r3, [r0, #16]
  58:Src/can.c     ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
  51              		.loc 1 58 0
  52 0014 4361     		str	r3, [r0, #20]
  59:Src/can.c     ****   hcan1.Init.TimeTriggeredMode = DISABLE;
  53              		.loc 1 59 0
  54 0016 0376     		strb	r3, [r0, #24]
  60:Src/can.c     ****   hcan1.Init.AutoBusOff = DISABLE;
  55              		.loc 1 60 0
ARM GAS  /tmp/ccLQWHGu.s 			page 3


  56 0018 4376     		strb	r3, [r0, #25]
  61:Src/can.c     ****   hcan1.Init.AutoWakeUp = DISABLE;
  57              		.loc 1 61 0
  58 001a 8376     		strb	r3, [r0, #26]
  62:Src/can.c     ****   hcan1.Init.AutoRetransmission = DISABLE;
  59              		.loc 1 62 0
  60 001c C376     		strb	r3, [r0, #27]
  63:Src/can.c     ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
  61              		.loc 1 63 0
  62 001e 0377     		strb	r3, [r0, #28]
  64:Src/can.c     ****   hcan1.Init.TransmitFifoPriority = DISABLE;
  63              		.loc 1 64 0
  64 0020 4377     		strb	r3, [r0, #29]
  65:Src/can.c     ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
  65              		.loc 1 65 0
  66 0022 FFF7FEFF 		bl	HAL_CAN_Init
  67              	.LVL0:
  68 0026 00B9     		cbnz	r0, .L4
  69              	.L1:
  66:Src/can.c     ****   {
  67:Src/can.c     ****     Error_Handler();
  68:Src/can.c     ****   }
  69:Src/can.c     **** 
  70:Src/can.c     **** }
  70              		.loc 1 70 0
  71 0028 08BD     		pop	{r3, pc}
  72              	.L4:
  67:Src/can.c     ****   }
  73              		.loc 1 67 0
  74 002a FFF7FEFF 		bl	Error_Handler
  75              	.LVL1:
  76              		.loc 1 70 0
  77 002e FBE7     		b	.L1
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 0030 00000000 		.word	hcan1
  82 0034 00640040 		.word	1073767424
  83              		.cfi_endproc
  84              	.LFE126:
  86              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  87              		.align	1
  88              		.global	HAL_CAN_MspInit
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	HAL_CAN_MspInit:
  95              	.LFB127:
  71:Src/can.c     **** 
  72:Src/can.c     **** void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
  73:Src/can.c     **** {
  96              		.loc 1 73 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 32
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL2:
ARM GAS  /tmp/ccLQWHGu.s 			page 4


 101 0000 00B5     		push	{lr}
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 14, -4
 105 0002 89B0     		sub	sp, sp, #36
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 40
  74:Src/can.c     **** 
  75:Src/can.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 108              		.loc 1 75 0
 109 0004 0023     		movs	r3, #0
 110 0006 0393     		str	r3, [sp, #12]
 111 0008 0493     		str	r3, [sp, #16]
 112 000a 0593     		str	r3, [sp, #20]
 113 000c 0693     		str	r3, [sp, #24]
 114 000e 0793     		str	r3, [sp, #28]
  76:Src/can.c     ****   if(canHandle->Instance==CAN1)
 115              		.loc 1 76 0
 116 0010 0268     		ldr	r2, [r0]
 117 0012 154B     		ldr	r3, .L11
 118 0014 9A42     		cmp	r2, r3
 119 0016 02D0     		beq	.L10
 120              	.LVL3:
 121              	.L7:
  77:Src/can.c     ****   {
  78:Src/can.c     ****   /* USER CODE BEGIN CAN1_MspInit 0 */
  79:Src/can.c     **** 
  80:Src/can.c     ****   /* USER CODE END CAN1_MspInit 0 */
  81:Src/can.c     ****     /* CAN1 clock enable */
  82:Src/can.c     ****     __HAL_RCC_CAN1_CLK_ENABLE();
  83:Src/can.c     ****   
  84:Src/can.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  85:Src/can.c     ****     /**CAN1 GPIO Configuration    
  86:Src/can.c     ****     PA11     ------> CAN1_RX
  87:Src/can.c     ****     PA12     ------> CAN1_TX 
  88:Src/can.c     ****     */
  89:Src/can.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
  90:Src/can.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  91:Src/can.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  92:Src/can.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  93:Src/can.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
  94:Src/can.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  95:Src/can.c     **** 
  96:Src/can.c     ****   /* USER CODE BEGIN CAN1_MspInit 1 */
  97:Src/can.c     **** 
  98:Src/can.c     ****   /* USER CODE END CAN1_MspInit 1 */
  99:Src/can.c     ****   }
 100:Src/can.c     **** }
 122              		.loc 1 100 0
 123 0018 09B0     		add	sp, sp, #36
 124              	.LCFI3:
 125              		.cfi_remember_state
 126              		.cfi_def_cfa_offset 4
 127              		@ sp needed
 128 001a 5DF804FB 		ldr	pc, [sp], #4
 129              	.LVL4:
 130              	.L10:
ARM GAS  /tmp/ccLQWHGu.s 			page 5


 131              	.LCFI4:
 132              		.cfi_restore_state
 133              	.LBB2:
  82:Src/can.c     ****   
 134              		.loc 1 82 0
 135 001e 0021     		movs	r1, #0
 136 0020 0191     		str	r1, [sp, #4]
 137 0022 03F5EA33 		add	r3, r3, #119808
 138 0026 1A6C     		ldr	r2, [r3, #64]
 139 0028 42F00072 		orr	r2, r2, #33554432
 140 002c 1A64     		str	r2, [r3, #64]
 141 002e 1A6C     		ldr	r2, [r3, #64]
 142 0030 02F00072 		and	r2, r2, #33554432
 143 0034 0192     		str	r2, [sp, #4]
 144 0036 019A     		ldr	r2, [sp, #4]
 145              	.LBE2:
 146              	.LBB3:
  84:Src/can.c     ****     /**CAN1 GPIO Configuration    
 147              		.loc 1 84 0
 148 0038 0291     		str	r1, [sp, #8]
 149 003a 1A6B     		ldr	r2, [r3, #48]
 150 003c 42F00102 		orr	r2, r2, #1
 151 0040 1A63     		str	r2, [r3, #48]
 152 0042 1B6B     		ldr	r3, [r3, #48]
 153 0044 03F00103 		and	r3, r3, #1
 154 0048 0293     		str	r3, [sp, #8]
 155 004a 029B     		ldr	r3, [sp, #8]
 156              	.LBE3:
  89:Src/can.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 157              		.loc 1 89 0
 158 004c 4FF4C053 		mov	r3, #6144
 159 0050 0393     		str	r3, [sp, #12]
  90:Src/can.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 160              		.loc 1 90 0
 161 0052 0223     		movs	r3, #2
 162 0054 0493     		str	r3, [sp, #16]
  92:Src/can.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 163              		.loc 1 92 0
 164 0056 0323     		movs	r3, #3
 165 0058 0693     		str	r3, [sp, #24]
  93:Src/can.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 93 0
 167 005a 0923     		movs	r3, #9
 168 005c 0793     		str	r3, [sp, #28]
  94:Src/can.c     **** 
 169              		.loc 1 94 0
 170 005e 03A9     		add	r1, sp, #12
 171 0060 0248     		ldr	r0, .L11+4
 172              	.LVL5:
 173 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL6:
 175              		.loc 1 100 0
 176 0066 D7E7     		b	.L7
 177              	.L12:
 178              		.align	2
 179              	.L11:
 180 0068 00640040 		.word	1073767424
ARM GAS  /tmp/ccLQWHGu.s 			page 6


 181 006c 00000240 		.word	1073872896
 182              		.cfi_endproc
 183              	.LFE127:
 185              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 186              		.align	1
 187              		.global	HAL_CAN_MspDeInit
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	HAL_CAN_MspDeInit:
 194              	.LFB128:
 101:Src/can.c     **** 
 102:Src/can.c     **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* canHandle)
 103:Src/can.c     **** {
 195              		.loc 1 103 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              	.LVL7:
 200 0000 08B5     		push	{r3, lr}
 201              	.LCFI5:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 3, -8
 204              		.cfi_offset 14, -4
 104:Src/can.c     **** 
 105:Src/can.c     ****   if(canHandle->Instance==CAN1)
 205              		.loc 1 105 0
 206 0002 0268     		ldr	r2, [r0]
 207 0004 074B     		ldr	r3, .L17
 208 0006 9A42     		cmp	r2, r3
 209 0008 00D0     		beq	.L16
 210              	.LVL8:
 211              	.L13:
 106:Src/can.c     ****   {
 107:Src/can.c     ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 108:Src/can.c     **** 
 109:Src/can.c     ****   /* USER CODE END CAN1_MspDeInit 0 */
 110:Src/can.c     ****     /* Peripheral clock disable */
 111:Src/can.c     ****     __HAL_RCC_CAN1_CLK_DISABLE();
 112:Src/can.c     ****   
 113:Src/can.c     ****     /**CAN1 GPIO Configuration    
 114:Src/can.c     ****     PA11     ------> CAN1_RX
 115:Src/can.c     ****     PA12     ------> CAN1_TX 
 116:Src/can.c     ****     */
 117:Src/can.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 118:Src/can.c     **** 
 119:Src/can.c     ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 120:Src/can.c     **** 
 121:Src/can.c     ****   /* USER CODE END CAN1_MspDeInit 1 */
 122:Src/can.c     ****   }
 123:Src/can.c     **** } 
 212              		.loc 1 123 0
 213 000a 08BD     		pop	{r3, pc}
 214              	.LVL9:
 215              	.L16:
 111:Src/can.c     ****   
ARM GAS  /tmp/ccLQWHGu.s 			page 7


 216              		.loc 1 111 0
 217 000c 064A     		ldr	r2, .L17+4
 218 000e 136C     		ldr	r3, [r2, #64]
 219 0010 23F00073 		bic	r3, r3, #33554432
 220 0014 1364     		str	r3, [r2, #64]
 117:Src/can.c     **** 
 221              		.loc 1 117 0
 222 0016 4FF4C051 		mov	r1, #6144
 223 001a 0448     		ldr	r0, .L17+8
 224              	.LVL10:
 225 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 226              	.LVL11:
 227              		.loc 1 123 0
 228 0020 F3E7     		b	.L13
 229              	.L18:
 230 0022 00BF     		.align	2
 231              	.L17:
 232 0024 00640040 		.word	1073767424
 233 0028 00380240 		.word	1073887232
 234 002c 00000240 		.word	1073872896
 235              		.cfi_endproc
 236              	.LFE128:
 238              		.comm	hcan1,40,4
 239              		.text
 240              	.Letext0:
 241              		.file 2 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.
 242              		.file 3 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 243              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 244              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 245              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 246              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 247              		.file 8 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 248              		.file 9 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 249              		.file 10 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 250              		.file 11 "/usr/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 251              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 252              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 253              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 254              		.file 15 "Inc/can.h"
 255              		.file 16 "Inc/main.h"
ARM GAS  /tmp/ccLQWHGu.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can.c
     /tmp/ccLQWHGu.s:18     .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccLQWHGu.s:25     .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccLQWHGu.s:81     .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccLQWHGu.s:87     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccLQWHGu.s:94     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccLQWHGu.s:180    .text.HAL_CAN_MspInit:0000000000000068 $d
     /tmp/ccLQWHGu.s:186    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccLQWHGu.s:193    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccLQWHGu.s:232    .text.HAL_CAN_MspDeInit:0000000000000024 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
